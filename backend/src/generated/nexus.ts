/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as Context from "../context"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    model: NexusPrisma<TypeName, 'model'>
    crud: any
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  RoomClickWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  RoomWhereUniqueInput: { // input type
    id?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenRootTypes {
  Category: { // root type
    id: string; // String!
    name: string; // String!
    thumbnailUrl?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: {};
  Query: {};
  Room: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    deletedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // String!
    roomUrl: string; // String!
    thumbnailUrl?: string | null; // String
    title?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RoomClick: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
  }
  RoomCredentials: { // root type
    password: string; // String!
    roomId: string; // String!
  }
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  RoomClickWhereUniqueInput: NexusGenInputs['RoomClickWhereUniqueInput'];
  RoomWhereUniqueInput: NexusGenInputs['RoomWhereUniqueInput'];
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
  DateTime: NexusGenScalars['DateTime'];
}

export interface NexusGenFieldTypes {
  Category: { // field return type
    id: string; // String!
    name: string; // String!
    rooms: NexusGenRootTypes['Room'][]; // [Room!]!
    thumbnailUrl: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: { // field return type
    createRoom: NexusGenRootTypes['Room'] | null; // Room
    deleteRoom: NexusGenRootTypes['Room'] | null; // Room
    editRoomTitle: NexusGenRootTypes['Room'] | null; // Room
    roomClicked: NexusGenRootTypes['RoomClick'] | null; // RoomClick
  }
  Query: { // field return type
    allCategories: NexusGenRootTypes['Category'][]; // [Category!]!
    categoryRooms: NexusGenRootTypes['Room'][]; // [Room!]!
  }
  Room: { // field return type
    clicks: NexusGenRootTypes['RoomClick'][]; // [RoomClick!]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    deletedAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // String!
    roomCredentials: NexusGenRootTypes['RoomCredentials']; // RoomCredentials!
    roomUrl: string; // String!
    thumbnailUrl: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RoomClick: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
  }
  RoomCredentials: { // field return type
    password: string; // String!
    roomId: string; // String!
  }
}

export interface NexusGenArgTypes {
  Category: {
    rooms: { // args
      after?: NexusGenInputs['RoomWhereUniqueInput'] | null; // RoomWhereUniqueInput
      before?: NexusGenInputs['RoomWhereUniqueInput'] | null; // RoomWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Mutation: {
    createRoom: { // args
      categoryId: string; // ID!
      roomLink: string; // String!
      title: string; // String!
    }
    deleteRoom: { // args
      roomId: string; // ID!
      roomPassword: string; // String!
    }
    editRoomTitle: { // args
      roomId: string; // ID!
      roomPassword: string; // String!
      title: string; // String!
    }
    roomClicked: { // args
      roomId: string; // ID!
    }
  }
  Query: {
    categoryRooms: { // args
      categoryId: string; // ID!
    }
  }
  Room: {
    clicks: { // args
      after?: NexusGenInputs['RoomClickWhereUniqueInput'] | null; // RoomClickWhereUniqueInput
      before?: NexusGenInputs['RoomClickWhereUniqueInput'] | null; // RoomClickWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Category" | "Mutation" | "Query" | "Room" | "RoomClick" | "RoomCredentials";

export type NexusGenInputNames = "RoomClickWhereUniqueInput" | "RoomWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}